# 2025-10-15
right_format = ''
scan_timeout = 30
command_timeout = 500
add_newline = true
palette = ''
palettes = {}
follow_symlinks = true

[aws]
format = 'on [$symbol($profile )(\($region\) )(\[$duration\] )]($style)'
symbol = '‚òÅÔ∏è '
region_aliases = {}
profile_aliases = {}
style = 'bold yellow'
expiration_symbol = 'X'
disabled = false
force_display = false

[azure]
format = 'on [$symbol($subscription)]($style) '
symbol = 'Û∞†Ö '
style = 'blue bold'
disabled = true
subscription_aliases = {}

[battery]
full_symbol = 'Û∞Åπ '
charging_symbol = 'Û∞ÇÑ '
discharging_symbol = 'Û∞ÇÉ '
unknown_symbol = 'Û∞ÅΩ '
empty_symbol = 'Û∞Çé '
format = '[$symbol$percentage]($style) '
disabled = false

[buf]
format = 'with [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = 'üêÉ '
detect_extensions = []
detect_files = ['buf.yaml', 'buf.gen.yaml', 'buf.work.yaml']
detect_folders = []
style = 'bold blue'
disabled = false

[bun]
format = 'via [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = 'ü•ü '
detect_extensions = []
detect_files = ['bun.lock', 'bun.lockb', 'bunfig.toml']
detect_folders = []
style = 'bold red'
disabled = false

[c]
format = 'via [$symbol($version(-$name) )]($style)'
version_format = 'v${raw}'
symbol = 'C '
detect_extensions = ['c', 'h']
detect_files = []
detect_folders = []
commands = [['cc', '--version'], ['gcc', '--version'], ['clang', '--version']]
style = 'bold 149'
disabled = false

[cpp]
format = 'via [$symbol($version(-$name) )]($style)'
version_format = 'v${raw}'
symbol = 'C++ '
detect_extensions = [
    'cpp',
    'cc',
    'cxx',
    'c++',
    'hpp',
    'hh',
    'hxx',
    'h++',
    'tcc',
]
detect_files = []
detect_folders = []
commands = [
    [
        'c++',
        '--version',
    ],
    [
        'g++',
        '--version',
    ],
    [
        'clang++',
        '--version',
    ],
]
style = 'bold 149'
disabled = true

[character]
format = '$symbol '
success_symbol = '[‚ùØ](bold green)'
error_symbol = '[‚ùØ](bold red)'
vimcmd_symbol = '[‚ùÆ](bold green)'
vimcmd_replace_one_symbol = '[‚ùÆ](bold purple)'
vimcmd_replace_symbol = '[‚ùÆ](bold purple)'
vimcmd_visual_symbol = '[‚ùÆ](bold yellow)'
disabled = false

[cmake]
format = 'via [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = '‚ñ≥ '
detect_extensions = []
detect_files = ['CMakeLists.txt', 'CMakeCache.txt']
detect_folders = []
style = 'bold blue'
disabled = false

[cobol]
symbol = '‚öôÔ∏è '
format = 'via [$symbol($version )]($style)'
version_format = 'v${raw}'
style = 'bold blue'
detect_extensions = ['cbl', 'cob', 'CBL', 'COB']
detect_files = []
detect_folders = []
disabled = false

[cmd_duration]
min_time = 2_000
show_milliseconds = false
format = 'took [$duration]($style) '
style = 'bold yellow'
disabled = false
show_notifications = false
min_time_to_notify = 45_000
notification_timeout = ''

[conda]
truncation_length = 1
symbol = 'üÖí '
style = 'bold green'
format = 'via [$symbol$environment]($style) '
ignore_base = true
detect_env_vars = ["!PIXI_ENVIRONMENT_NAME"]
disabled = false

[container]
symbol = '‚¨¢'
style = 'bold red dimmed'
format = '[$symbol \[$name\]]($style) '
disabled = false

[crystal]
symbol = 'üîÆ '
format = 'via [$symbol($version )]($style)'
version_format = 'v${raw}'
style = 'bold red'
detect_extensions = ['cr']
detect_files = ['shard.yml']
detect_folders = []
disabled = false

[daml]
format = 'via [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = 'Œõ '
style = 'bold cyan'
detect_extensions = []
detect_files = ['daml.yaml']
detect_folders = []
disabled = false

[dart]
format = 'via [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = 'üéØ '
detect_extensions = ['dart']
detect_files = ['pubspec.yaml', 'pubspec.yml', 'pubspec.lock']
detect_folders = ['.dart_tool']
style = 'bold blue'
disabled = false

[deno]
format = 'via [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = 'ü¶ï '
detect_extensions = []
detect_files = [
    'deno.json',
    'deno.jsonc',
    'deno.lock',
    'mod.ts',
    'mod.js',
    'deps.ts',
    'deps.js',
]
detect_folders = []
style = 'green bold'
disabled = false

[directory]
truncation_length = 3
truncate_to_repo = true
format = '[$path]($style)[$read_only]($read_only_style) '
style = 'bold cyan'
disabled = false
read_only = 'üîí'
read_only_style = 'red'
truncation_symbol = ''
before_repo_root_style = ''
repo_root_style = ''
repo_root_format = '[$before_root_path]($before_repo_root_style)[$repo_root]($repo_root_style)[$path]($style)[$read_only]($read_only_style) '
home_symbol = '~'
use_os_path_sep = true

[direnv]
format = '[$symbol$loaded/$allowed]($style) '
symbol = 'direnv '
style = 'bold orange'
disabled = true
detect_extensions = []
detect_files = ['.envrc']
detect_folders = []
detect_env_vars = ['DIRENV_FILE']
allowed_msg = 'allowed'
not_allowed_msg = 'not allowed'
denied_msg = 'denied'
loaded_msg = 'loaded'
unloaded_msg = 'not loaded'

[docker_context]
format = 'via [$symbol$context]($style) '
symbol = 'üê≥ '
only_with_files = true
detect_extensions = []
detect_files = ['docker-compose.yml', 'docker-compose.yaml', 'Dockerfile']
detect_folders = []
style = 'blue bold'
disabled = false

[dotnet]
format = 'via [$symbol($version )(üéØ $tfm )]($style)'
version_format = 'v${raw}'
symbol = '.NET '
heuristic = true
detect_extensions = ['csproj', 'fsproj', 'xproj']
detect_files = [
    'global.json',
    'project.json',
    'Directory.Build.props',
    'Directory.Build.targets',
    'Packages.props',
]
detect_folders = []
style = 'bold blue'
disabled = false

[elixir]
format = 'via [$symbol($version \(OTP $otp_version\) )]($style)'
version_format = 'v${raw}'
symbol = 'üíß '
detect_extensions = []
detect_files = ['mix.exs']
detect_folders = []
style = 'bold purple'
disabled = false

[elm]
format = 'via [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = 'üå≥ '
detect_extensions = ['elm']
detect_files = ['elm.json', 'elm-package.json', '.elm-version']
detect_folders = ['elm-stuff']
style = 'cyan bold'
disabled = false

[env_var]
symbol = ""
variable = ''
default = ''
format = '"with [$env_value]($style) "'
description = ""
disabled = false

[erlang]
format = 'via [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = 'Óû± '
style = 'bold red'
detect_extensions = []
detect_files = ['rebar.config', 'elang.mk']
detect_folders = []
disabled = false

[fennel]
format = 'via [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = 'üßÖ '
style = 'bold green'
detect_extensions = ['fnl']
detect_files = []
detect_folders = []
disabled = false

[fill]
symbol = '.'
style = 'bold black'
disabled = false

[fossil_branch]
format = 'on [$symbol$branch]($style) '
symbol = 'ÓÇ† '
style = 'bold purple'
truncation_length = '2^63 - 1'
truncation_symbol = '‚Ä¶'
disabled = true

[fossil_metrics]
format = '([+$added]($added_style) )([-$deleted]($deleted_style) )'
added_style = 'bold green'
deleted_style = 'bold red'
only_nonzero_diffs = true
disabled = true

[gcloud]
format = 'on [$symbol$account(@$domain)(\($region\))]($style) '
symbol = '‚òÅÔ∏è '
region_aliases = {}
project_aliases = {}
detect_env_vars = []
style = 'bold blue'
disabled = false

[git_branch]
always_show_remote = false
format = 'on [$symbol$branch(:$remote_branch)]($style) '
symbol = 'ÓÇ† '
style = 'bold purple'

truncation_symbol = '‚Ä¶'
only_attached = false
ignore_branches = []
disabled = false

[git_commit]
commit_hash_length = 7
format = '[\($hash$tag\)]($style) '
style = 'bold green'
only_detached = true
tag_disabled = true
tag_max_candidates = 0
tag_symbol = ' üè∑ '
disabled = false

[git_state]
rebase = 'REBASING'
merge = 'MERGING'
revert = 'REVERTING'
cherry_pick = 'CHERRY-PICKING'
bisect = 'BISECTING'
am = 'AM'
am_or_rebase = 'AM/REBASE'
style = 'bold yellow'
format = '\([$state( $progress_current/$progress_total)]($style)\) '
disabled = false

[git_metrics]
added_style = 'bold green'
deleted_style = 'bold red'
only_nonzero_diffs = true
format = '([+$added]($added_style) )([-$deleted]($deleted_style) )'
disabled = true
ignore_submodules = false

[git_status]
format = '([\[$all_status$ahead_behind\]]($style) )'
conflicted = '='
ahead = '‚á°'
behind = '‚á£'
diverged = '‚áï'
up_to_date = ''
untracked = '?'
stashed = '$'
modified = '!'
staged = '+'
renamed = '¬ª'
deleted = '‚úò'
typechanged = ""
style = 'bold red'
ignore_submodules = false
disabled = false
windows_starship = ''
use_git_executable = false

[gleam]
format = 'via [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = '‚≠ê '
detect_extensions = ['gleam']
detect_files = ['gleam.toml']
style = 'bold #FFAFF3'
disabled = false

[golang]
format = 'via [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = 'üêπ '
detect_extensions = ['go']
detect_files = [
    'go.mod',
    'go.sum',
    'go.work',
    'glide.yaml',
    'Gopkg.yml',
    'Gopkg.lock',
    '.go-version',
]
detect_folders = ['Godeps']
style = 'bold cyan'
not_capable_style = 'bold red'
disabled = false

[guix_shell]
format = 'via [$symbol]($style) '
symbol = 'üêÉ '
style = 'yellow bold'
disabled = false

[gradle]
format = 'via [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = 'üÖ∂ '
detect_extensions = ['gradle', 'gradle.kts']
detect_files = []
detect_folders = ['gradle']
style = 'bold bright-cyan'
disabled = false
recursive = false

[haskell]
format = 'via [$symbol($version )]($style)'
symbol = 'Œª '
detect_extensions = ['hs', 'cabal', 'hs-boot']
detect_files = ['stack.yaml', 'cabal.project']
detect_folders = []
style = 'bold purple'
disabled = false

[haxe]
format = 'via [$symbol($version )]($style)'
version_format = 'v${raw}'
detect_extensions = ['hx', 'hxml']
detect_files = [
    'project.xml',
    'Project.xml',
    'application.xml',
    'haxelib.json',
    'hxformat.json',
    '.haxerc',
]
detect_folders = ['.haxelib', 'haxe_libraries']
symbol = '‚åò '
style = 'bold fg:202'
disabled = false

[helm]
format = 'via [$symbol($version )]($style)'
version_format = 'v${raw}'
detect_extensions = []
detect_files = ['helmfile.yaml', 'Chart.yaml']
detect_folders = []
symbol = '‚éà '
style = 'bold white'
disabled = false

[hostname]
ssh_only = true
ssh_symbol = 'üåê '
trim_at = '.'
detect_env_vars = []
format = '[$ssh_symbol$hostname]($style) in '
style = 'bold dimmed green'
disabled = false
aliases = {}

[java]
format = 'via [${symbol}(${version} )]($style)'
version_format = 'v${raw}'
detect_extensions = ['java', 'class', 'gradle', 'jar', 'cljs', 'cljc']
detect_files = [
    'pom.xml',
    'build.gradle.kts',
    'build.sbt',
    '.java-version',
    'deps.edn',
    'project.clj',
    'build.boot',
    '.sdkmanrc',
]
detect_folders = []
symbol = '‚òï '
style = 'red dimmed'
disabled = false

[jobs]
threshold = 1
symbol_threshold = 1
number_threshold = 2
format = '[$symbol$number]($style) '
symbol = '‚ú¶'
style = 'bold blue'
disabled = false

[julia]
format = 'via [$symbol($version )]($style)'
version_format = 'v${raw}'
detect_extensions = ['jl']
detect_files = ['Project.toml', 'Manifest.toml']
detect_folders = []
symbol = '‡ÆÉ '
style = 'bold purple'
disabled = false

[kotlin]
format = 'via [$symbol($version )]($style)'
version_format = 'v${raw}'
detect_extensions = ['kt', 'kts']
detect_files = []
detect_folders = []
symbol = 'üÖ∫ '
style = 'bold blue'
kotlin_binary = 'kotlin'
disabled = false

[kubernetes]
symbol = '‚ò∏ '
format = '[$symbol$context( \($namespace\))]($style) in '
style = 'cyan bold'
context_aliases = {}
user_aliases = {}
detect_extensions = []
detect_files = []
detect_folders = []
detect_env_vars = []
contexts = []
disabled = true

[line_break]
disabled = false

[localip]
ssh_only = true
format = '[$localipv4]($style) '
style = 'bold yellow'
disabled = true

[lua]
format = 'via [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = 'üåô '
detect_extensions = ['lua']
detect_files = ['.lua-version']
detect_folders = ['lua']
style = 'bold blue'
lua_binary = 'lua'
disabled = false

[memory_usage]
threshold = 75
format = 'via $symbol [${ram}( | ${swap})]($style) '
symbol = 'üêè'
style = 'bold dimmed white'
disabled = true

[meson]
truncation_length = '2^32 - 1'
truncation_symbol = '‚Ä¶'
format = 'via [$symbol$project]($style) '
symbol = '‚¨¢ '
style = 'blue bold'
disabled = false

[hg_branch]
symbol = 'ÓÇ† '
style = 'bold purple'
format = 'on [$symbol$branch(:$topic)]($style) '
truncation_length = '2^63 - 1'
truncation_symbol = '‚Ä¶'
disabled = true

[mise]
symbol = 'mise '
style = 'bold purple'
format = 'on [$symbol$health]($style) '
healthy_symbol = 'healthy'
unhealthy_symbol = 'unhealthy'
disabled = true

[mojo]
format = 'with [$symbol($version )]($style)'
symbol = 'üî• '
style = 'bold 208'
disabled = false
detect_extensions = ['mojo', 'üî•']
detect_files = []
detect_folders = []

[nats]
symbol = '‚úâÔ∏è '
style = 'bold purple'
format = '[$symbol$name]($style)'
disabled = false

[netns]
format = '[$symbol \[$name\]]($style)'
symbol = 'üõú '
style = 'blue bold dimmed'
disabled = false

[nim]
format = 'via [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = 'üëë '
detect_extensions = ['nim', 'nims', 'nimble']
detect_files = ['nim.cfg']
detect_folders = []
style = 'bold yellow'
disabled = false

[nix_shell]
format = 'via [$symbol$state( \($name\))]($style) '
symbol = '‚ùÑÔ∏è '
style = 'bold blue'
impure_msg = 'impure'
pure_msg = 'pure'
unknown_msg = ''
disabled = false
heuristic = false

[nodejs]
format = 'via [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = 'Óúò '
detect_extensions = ['js', 'mjs', 'cjs', 'ts', 'mts', 'cts']
detect_files = ['package.json', '.node-version', '.nvmrc']
detect_folders = ['node_modules']
style = 'bold green'
disabled = false
not_capable_style = 'bold red'

[ocaml]
format = 'via [$symbol($version )(\($switch_indicator$switch_name\) )]($style)'
version_format = 'v${raw}'
symbol = 'üê´ '
global_switch_indicator = ''
local_switch_indicator = '*'
detect_extensions = ['opam', 'ml', 'mli', 're', 'rei']
detect_files = ['dune', 'dune-project', 'jbuild', 'jbuild-ignore', '.merlin']
detect_folders = ['_opam', 'esy.lock']
style = 'bold yellow'
disabled = false

[odin]
format = 'via [$symbol($version )]($style)'
show_commit = false
symbol = '√ò '
style = 'bold bright-blue'
disabled = false
detect_extensions = ['odin']
detect_files = []
detect_folders = []

[opa]
format = 'via [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = 'ü™ñ '
detect_extensions = ['rego']
detect_files = []
detect_folders = []
style = 'bold blue'
disabled = false

[openstack]
format = 'on [$symbol$cloud(\($project\))]($style) '
symbol = '‚òÅÔ∏è '
style = 'bold yellow'
disabled = false

[os]
format = '[$symbol]($style)'
style = 'bold white'
disabled = true
symbols = ''

[package]
format = 'is [$symbol$version]($style) '
symbol = 'üì¶ '
version_format = 'v${raw}'
style = 'bold 208'
display_private = false
disabled = false

[perl]
format = 'via [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = 'üê™ '
detect_extensions = ['pl', 'pm', 'pod']
detect_files = [
    'Makefile.PL',
    'Build.PL',
    'cpanfile',
    'cpanfile.snapshot',
    'META.json',
    'META.yml',
    '.perl-version',
]
detect_folders = []
style = 'bold 149'
disabled = false

[php]
format = 'via [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = 'üêò '
detect_extensions = ['php']
detect_files = ['composer.json', '.php-version']
detect_folders = []
style = '147 bold'
disabled = false

[pijul_channel]
symbol = 'ÓÇ† '
style = 'bold purple'
format = 'on [$symbol$channel]($style) '

truncation_symbol = '‚Ä¶'
disabled = true

[pixi]
format = 'via [$symbol($version )(\($environment\) )]($style)'
version_format = 'v${raw}'
symbol = 'üßö '
style = 'yellow bold'
show_default_environment = true
pixi_binary = ['pixi']
detect_extensions = []
detect_files = ['pixi.toml']
detect_folders = ['.pixi']
disabled = false

[pulumi]
format = 'via [$symbol($username@)$stack]($style) '
version_format = 'v${raw}'
symbol = 'ÔÜ≤ '
style = 'bold 5'
search_upwards = true
disabled = false

[purescript]
format = 'via [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = ' '
detect_extensions = ['purs']
detect_files = ['spago.dhall', 'spago.yaml', 'spago.lock']
detect_folders = []
style = 'bold white'
disabled = false

[python]
format = 'via [${symbol}${pyenv_prefix}(${version} )(\($virtualenv\) )]($style)'
version_format = 'v${raw}'
symbol = 'üêç '
style = 'yellow bold'
pyenv_version_name = false
pyenv_prefix = 'pyenv'
python_binary = ['python', 'python3', 'python2']
detect_extensions = ['py', 'ipynb']
detect_files = [
    '.python-version',
    'Pipfile',
    '__init__.py',
    'pyproject.toml',
    'requirements.txt',
    'setup.py',
    'tox.ini',
]
detect_folders = []
disabled = false

[quarto]
format = 'via [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = '‚®Å '
style = 'bold #75AADB'
detect_extensions = ['.qmd']
detect_files = ['_quarto.yml']
detect_folders = []
disabled = false

[rlang]
format = 'via [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = 'üìê'
style = 'blue bold'
detect_extensions = ['R', 'Rd', 'Rmd', 'Rproj', 'Rsx']
detect_files = ['.Rprofile']
detect_folders = ['.Rproj.user']
disabled = false

[raku]
format = 'via [$symbol($version-$vm_version )]($style)'
version_format = 'v${raw}'
symbol = 'ü¶ã '
detect_extensions = ['p6', 'pm6', 'pod6', 'raku', 'rakumod']
detect_files = ['META6.json']
detect_folders = []
style = 'bold 149'
disabled = false

[red]
format = 'via [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = 'üî∫ '
detect_extensions = ['red']
detect_files = []
detect_folders = []
style = 'red bold'
disabled = false

[ruby]
format = 'via [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = 'üíé '
detect_extensions = ['rb']
detect_files = ['Gemfile', '.ruby-version']
detect_folders = []
detect_variables = ['RUBY_VERSION', 'RBENV_VERSION']
style = 'bold red'
disabled = false

[rust]
format = 'via [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = 'ü¶Ä '
detect_extensions = ['rs']
detect_files = ['Cargo.toml']
detect_folders = []
style = 'bold red'
disabled = false

[scala]
format = 'via [${symbol}(${version} )]($style)'
version_format = 'v${raw}'
detect_extensions = ['sbt', 'scala']
detect_files = ['.scalaenv', '.sbtenv', 'build.sbt']
detect_folders = ['.metals']
symbol = 'üÜÇ '
style = 'red dimmed'
disabled = false

[shell]
bash_indicator = 'bsh'
fish_indicator = 'fsh'
zsh_indicator = 'zsh'
powershell_indicator = 'psh'
pwsh_indicator = ''
ion_indicator = 'ion'
elvish_indicator = 'esh'
tcsh_indicator = 'tsh'
xonsh_indicator = 'xsh'
cmd_indicator = 'cmd'
nu_indicator = 'nu'
unknown_indicator = ''
format = '[$indicator]($style) '
style = 'white bold'
disabled = true

[shlvl]
threshold = 2
format = '[$symbol$shlvl]($style) '
symbol = '‚ÜïÔ∏è '
repeat = false
repeat_offset = 0
style = 'bold yellow'
disabled = true

[singularity]
format = '[$symbol\[$env\]]($style) '
symbol = ''
style = 'bold dimmed blue'
disabled = false

[solidity]
format = 'via [$symbol($version )]($style)'
version_format = 'v${major}.${minor}.${patch}'
symbol = 'S '
compiler = ['solc']
detect_extensions = ['sol']
detect_files = []
detect_folders = []
style = 'bold blue'
disabled = false

[spack]
truncation_length = 1
symbol = 'üÖ¢ '
style = 'bold blue'
format = 'via [$symbol$environment]($style) '
disabled = false

[status]
format = '[$symbol$status]($style) '
symbol = '‚ùå'
success_symbol = ''
not_executable_symbol = 'üö´'
not_found_symbol = 'üîç'
sigint_symbol = 'üß±'
signal_symbol = '‚ö°'
style = 'bold red'
success_style = ''
failure_style = ''
recognize_signal_code = true
map_symbol = false
pipestatus = false
pipestatus_separator = '|'
pipestatus_format = '\[$pipestatus\] => [$symbol$common_meaning$signal_name$maybe_int]($style) '
pipestatus_segment_format = ''
disabled = true

[sudo]
format = '[as $symbol]($style)'
symbol = 'üßô '
style = 'bold blue'
allow_windows = false
disabled = true

[swift]
format = 'via [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = 'üê¶ '
detect_extensions = ['swift']
detect_files = ['Package.swift']
detect_folders = []
style = 'bold 202'
disabled = false

[terraform]
format = 'via [$symbol$workspace]($style) '
version_format = 'v${raw}'
symbol = 'üí†'
detect_extensions = ['tf', 'tfplan', 'tfstate']
detect_files = []
detect_folders = ['.terraform']
style = 'bold 105'
disabled = false

[time]
format = 'at [$time]($style) '
use_12hr = false
time_format = 'see below'
style = 'bold yellow'
utc_time_offset = 'local'
disabled = true
time_range = '-'

[typst]
format = 'via [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = 't '
style = 'bold #0093A7'
detect_extensions = ['.typ']
detect_files = ['template.typ']
detect_folders = []
disabled = false

[username]
style_root = 'bold red'
style_user = 'bold yellow'
detect_env_vars = []
format = '[$user]($style) in '
show_always = false
disabled = false
aliases = {}

[vagrant]
format = 'via [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = '‚ç± '
detect_extensions = []
detect_files = ['Vagrantfile']
detect_folders = []
style = 'cyan bold'
disabled = false

[vlang]
format = 'via [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = 'V '
detect_extensions = ['v']
detect_files = ['v.mod', 'vpkg.json', '.vpkg-lock.json']
detect_folders = []
style = 'blue bold'
disabled = false

[vcsh]
symbol = ''
style = 'bold yellow'
format = 'vcsh [$symbol$repo]($style) '
disabled = false

[zig]
format = 'via [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = '‚ÜØ '
style = 'bold yellow'
disabled = false
detect_extensions = ['zig']
detect_files = []
detect_folders = []

[custom]
command = ''
when = false
require_repo = false
shell = ''
description = ''
unsafe_no_escape = false
detect_files = []
detect_folders = []
detect_extensions = []
symbol = ''
style = 'bold green'
format = '[$symbol($output )]($style)'
disabled = false
os = ''
use_stdin = ''
ignore_timeout = false
